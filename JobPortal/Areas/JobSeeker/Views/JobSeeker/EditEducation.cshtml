@model JobPortal.Models.CandidateEducation

@{
    ViewBag.Title = "EditEducation";
}

<h2>Edit Education Details</h2>


@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    
<div class="form-horizontal">
    <hr />
    @Html.HiddenFor(model => model.candidateEduId)
    @Html.HiddenFor(model => model.candidateId)

    <div class="form-group">
        @Html.LabelFor(model => model.aLevelSubject1, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.aLevelSubject1, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.aLevelSubject1, "", new { @class = "text-danger" })
        </div>
    </div>
    <div class="form-group">
        @Html.LabelFor(model => model.aLevelGrade1, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.aLevelGrade1, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.aLevelGrade1, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.aLevelSubject2, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.aLevelSubject2, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.aLevelSubject2, "", new { @class = "text-danger" })
        </div>
    </div>
    <div class="form-group">
        @Html.LabelFor(model => model.aLevelGrade2, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.aLevelGrade2, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.aLevelGrade2, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.aLevelSubject3, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.aLevelSubject3, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.aLevelSubject3, "", new { @class = "text-danger" })
        </div>
    </div>
    <div class="form-group">
        @Html.LabelFor(model => model.aLevelGrade3, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.aLevelGrade3, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.aLevelGrade3, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.graduation, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.graduation, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.graduation, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.instituteGrad, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.instituteGrad, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.instituteGrad, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.percentageGrad, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.percentageGrad, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.percentageGrad, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.postGrad, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.postGrad, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.postGrad, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.institutePostGrad, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.institutePostGrad, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.institutePostGrad, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.percentagePostGrad, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.percentagePostGrad, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.percentagePostGrad, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.certification, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.certification, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.certification, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        <div class="col-md-offset-2 col-md-10">
            <input type="submit" value="Save" class="btn btn-default" /> |
            @Html.ActionLink("Back", "ViewEducation", new { candidateId = Model.candidateId })
        </div>
    </div>
</div>
}

<div>
    
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
