@model JobPortal.Models.JobPost

@{
    ViewBag.Title = "Edit";
}

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        @Html.HiddenFor(model => model.jobPostId)
        @Html.HiddenFor(model => model.companyId)
        @Html.HiddenFor(model => model.postedDate)

        <div class="card col-md-8 col-md-offset-2">
            <div class="card-header text-center bg-primary">
                <h2><b>Edit Job Details</b></h2>
            </div>

            <div class="card-body bg-success">
                <div class="form-group" style="padding-top:10px">
                    @Html.LabelFor(model => model.categoryId, htmlAttributes: new { @class = "control-label col-md-4" })
                    <div class="col-md-8">
                        @Html.DropDownListFor(model => model.categoryId, null, "Select Industry", new { @class = "form-control", id = "industryDDL" })
                        @Html.ValidationMessageFor(model => model.categoryId, "", new { @class = "col-md-6 text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.areaid, htmlAttributes: new { @class = "control-label col-md-4" })
                    <div class="col-md-8">
                        @Html.DropDownListFor(model => model.areaid, null, "Select Area", htmlAttributes: new { @class = "form-control", id = "areaDDL" })
                        @Html.ValidationMessageFor(model => model.areaid, "", new { @class = "col-md-6 text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.jobTitleId, htmlAttributes: new { @class = "control-label col-md-4" })
                    <div class="col-md-8">
                        @Html.DropDownListFor(model => model.jobTitleId, null, "Select Job Title", new { @class = "form-control", id = "jobtitleDDL" })
                        @Html.ValidationMessageFor(model => model.jobTitleId, "", new { @class = "col-md-6 text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.type, htmlAttributes: new { @class = "control-label col-md-4" })
                    <div class="col-md-8">
                        @Html.EditorFor(model => model.type, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.type, "", new { @class = "col-md-6 text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.location, htmlAttributes: new { @class = "control-label col-md-4" })
                    <div class="col-md-8">
                        @Html.EditorFor(model => model.location, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.location, "", new { @class = "col-md-6 text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.skillsReq, htmlAttributes: new { @class = "control-label col-md-4" })
                    <div class="col-md-8">
                        @Html.EditorFor(model => model.skillsReq, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.skillsReq, "", new { @class = "col-md-6 text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.educationReq, htmlAttributes: new { @class = "control-label col-md-4" })
                    <div class="col-md-8">
                        @Html.EditorFor(model => model.educationReq, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.educationReq, "", new { @class = "col-md-6 text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.description, htmlAttributes: new { @class = "control-label col-md-4" })
                    <div class="col-md-8">
                        @Html.EditorFor(model => model.description, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.description, "", new { @class = "col-md-6 text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.contactEmail, htmlAttributes: new { @class = "control-label col-md-4" })
                    <div class="col-md-8">
                        @Html.EditorFor(model => model.contactEmail, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.contactEmail, "", new { @class = "col-md-6 text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.salary, htmlAttributes: new { @class = "control-label col-md-4" })
                    <div class="col-md-8">
                        @Html.EditorFor(model => model.salary, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.salary, "", new { @class = "col-md-6 text-danger" })
                    </div>
                </div>

                <div class="form-group" style="padding-bottom:10px">
                    @Html.LabelFor(model => model.isAvailable, htmlAttributes: new { @class = "control-label col-md-4" })
                    <div class="col-md-8">
                        @Html.EditorFor(model => model.isAvailable, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.isAvailable, "", new { @class = "col-md-6 text-danger" })
                    </div>
                </div>
            </div>

            <div class="card-footer text-center">
                <div class="form-group">
                    <div class="col-md-12">
                        <input type="submit" value="Save" class="btn btn-primary" />
                        @Html.ActionLink("Back to List", "Index", null, new { @class = "btn btn-primary" })
                    </div>
                </div>
            </div>
        </div>
    </div>
}

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
    <script>
        $(document).ready(function () {
            var areaDDL = $('#areaDDL');
            var jobtitleDDL = $('#jobtitleDDL');
            $('#industryDDL').change(function () {
                areaDDL.empty();
                areaDDL.append($('<option/>', { value: '', text: 'Select Area' }));
                jobtitleDDL.empty();
                jobtitleDDL.append($('<option/>', { value: '', text: 'Select Job Title' }));
                if ($(this).val() != "") {
                    $.ajax({
                        type: 'post',
                        url: '/Home/GetArea',
                        data: { categoryId: $(this).val() },
                        dataType: 'json',
                        traditional: true,
                        success: function (data) {
                            $(data).each(function (index, item) {
                                areaDDL.append($('<option/>', { value: item.areaId, text: item.areaName }));
                            });
                        },
                        error: function (err) {
                            alert(err);
                        }
                    });
                }
            });
            $('#areaDDL').change(function () {
                jobtitleDDL.empty();
                jobtitleDDL.append($('<option/>', { value: '', text: 'Select Job Title' }));
                if ($(this).val() != "") {
                    $.ajax({
                        type: 'post',
                        url: '/Home/GetJobTitle',
                        data: { areaId: $(this).val() },
                        dataType: 'json',
                        traditional: true,
                        success: function (data) {
                            $(data).each(function (index, item) {
                                jobtitleDDL.append($('<option/>', { value: item.jobtitleId, text: item.jobtitleName }));
                            });
                        },
                        error: function (err) {
                            alert(err);
                        }
                    });
                }
            });
        })
    </script>
}
